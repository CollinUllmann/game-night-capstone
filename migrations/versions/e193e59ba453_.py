"""empty message

Revision ID: e193e59ba453
Revises: 
Create Date: 2024-03-01 12:20:41.621115

"""
from alembic import op
import sqlalchemy as sa
import os

SCHEMA = os.environ.get('SCHEMA')
ENVIRONMENT = os.environ.get('FLASK_ENV')


# revision identifiers, used by Alembic.
revision = 'e193e59ba453'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mana_cost', sa.String(), nullable=False),
    sa.Column('cmc', sa.Integer(), nullable=False),
    sa.Column('type_line', sa.String(), nullable=False),
    sa.Column('colors', sa.String(), nullable=False),
    sa.Column('color_identity', sa.String(), nullable=False),
    sa.Column('rarity', sa.String(), nullable=False),
    sa.Column('power', sa.String(), nullable=True),
    sa.Column('toughness', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('format', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id_winner', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id_winner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deck_cards',
    sa.Column('deck_id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], ),
    sa.PrimaryKeyConstraint('deck_id', 'card_id')
    )
    op.create_table('deck_matches',
    sa.Column('deck_id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('deck_id', 'match_id')
    )
    # ### end Alembic commands ###
    if (ENVIRONMENT == 'production'):
        op.execute(f"ALTER TABLE cards SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE events SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE decks SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE matches SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE deck_cards SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE deck_matches SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('deck_matches')
    op.drop_table('deck_cards')
    op.drop_table('matches')
    op.drop_table('decks')
    op.drop_table('users')
    op.drop_table('events')
    op.drop_table('cards')
    # ### end Alembic commands ###
